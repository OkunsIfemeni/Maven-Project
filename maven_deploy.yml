# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
    
   # Build Docker image
- task: Maven@3
  displayName: "Build Docker image"
  inputs:
    mavenPomFile: '$(System.DefaultWorkingDirectory)/pom.xml'
    goals: 'spring-boot:build-image'
    publishJUnitResults: false
    jdkVersionOption: 'default'
    mavenOptions: '-Xmx3072m -Dspring-boot.build-image.imageName=mavenacr2023.azurecr.io/my/container'

  # Push container image
- task: Docker@2
  displayName: "Push Docker image"
  inputs:
    containerRegistry: 'acr-connection'
    repository: 'react-and-spring-data-rest'
    command: 'push'
    tags: 'latest'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Visual Studio Enterprise (0baeb8ad-3e0a-4c8f-a740-07e0327cc188)'
    appType: 'webAppLinux'
    WebAppName: 'maven-appservice'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'


